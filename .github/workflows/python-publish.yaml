# This workflow uploads a Python Package to PyPI using Poetry when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pypi

on:
  push:
    tags:
      - "*-release"
      - "*-beta"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Publish python package
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

#    - name: Extract Python Version from pyproject.toml
#      id: python-version
#      run: |
#        version=$(grep 'python =' pyproject.toml | awk -F'"' '{print $2}' | tr -d '^~<=>')
#        echo "python-version=$version" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: pyproject.toml

    - name: Install Poetry
      run: |
        pipx install "poetry>=2.0.0,<3.0.0"

    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-root

    - name: Build the package
      run: |
        poetry build

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish:
    name: Upload release to PyPI
    needs: [ build ]
    runs-on: ubuntu-latest

    permissions:
      # In order to use Trusted Publisher
      id-token: write
      contents: read

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    #  Publish to TestPyPI
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

#    # Step 6: Publish to TestPyPI
#    - name: Publish to TestPyPI
#      run: |
#        poetry config repositories.test-pypi https://test.pypi.org/legacy/
#        poetry publish --repository test-pypi --username __token__ --password ${{ secrets.TESTPYPI_API_TOKEN }}
