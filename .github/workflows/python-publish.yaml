# This workflow uploads a Python Package to PyPI using Poetry when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pypi

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    name: Publish Python Package to TestPyPI
    runs-on: ubuntu-latest
    environment:
      name: testpypi-publish
      url: https://test.pypi.org/project/doc-docs/
    permissions:
      id-token: write
      contents: read

    steps:
    # Step 1: Checkout the codebase
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract Python Version from pyproject.toml
      id: python-version
      run: |
        version=$(grep 'python =' pyproject.toml | awk -F'"' '{print $2}' | tr -d '^~<=>')
        echo "python-version=$version" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.python-version }}

    # Step 3: Install Poetry
    - name: Install Poetry
      run: |
        pipx install "poetry>=2.0.0,<3.0.0"

    # Step 4: Install dependencies using Poetry
    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-root

    # Step 5: Build the package
    - name: Build package
      run: |
        poetry build

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1


